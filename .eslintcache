[{"C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\index.js":"1","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\App.js":"2","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\reportWebVitals.js":"3","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\Movies.js":"4","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\MovieDetails.js":"5","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\mockData\\moviesData.js":"6","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\Socialfollow.js":"7","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\Ticketbooking.js":"8","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\Movieseats.js":"9"},{"size":548,"mtime":1610007001219,"results":"10","hashOfConfig":"11"},{"size":1063,"mtime":1613636558533,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3111,"mtime":1613736322943,"results":"14","hashOfConfig":"11"},{"size":8685,"mtime":1613372759664,"results":"15","hashOfConfig":"11"},{"size":40698,"mtime":1613736319216,"results":"16","hashOfConfig":"11"},{"size":1835,"mtime":1611572948554,"results":"17","hashOfConfig":"11"},{"size":5649,"mtime":1613636554178,"results":"18","hashOfConfig":"11"},{"size":8951,"mtime":1613736315054,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1c3g4jz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\index.js",[],["42","43"],"C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\App.js",["44","45"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { BrowserRouter, Route, Redirect} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MovieDetails from \"./components/MovieDetails\";\nimport Ticketbooking from \"./components/Ticketbooking\";\nimport Movieseats from \"./components/Movieseats\";\n \n\n\nfunction App() {\n      return (\n      <div>    \n        <BrowserRouter>\n            <div className=\"App\"> \n                <Route path=\"/:name/moviedetails\" component={MovieDetails}></Route>\n                <Route path=\"/movies\" component={Movies}></Route> \n                <Route path=\"/movieseats\" component={Movieseats}></Route>\n                <Route path=\"/Ticketbooking\" component={Ticketbooking}></Route>\n                <Redirect from=\"/\" to=\"/movies\" />\n            </div>\n          </BrowserRouter>\n\n          \n      </div>  \n            );\n              }\n export default App;\n        \n\n\n\n      \n    \n      \n      \n\n","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\reportWebVitals.js",[],"C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\Movies.js",["46"],"C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\MovieDetails.js",["47","48","49","50","51","52"],"import React, { Component } from \"react\";\r\nimport { movies } from \"../mockData/moviesData\";\r\nimport { faStar, StarRating } from \"react-bootstrap-star-rating\";\r\nimport {Link} from \"react-router-dom\";\r\n// import {ReactStars} from \"react-rating-stars-component\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport homelogo from \"../img/home.jpg\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport SocialFollow from \"../components/Socialfollow\";\r\n\r\n\r\nclass MovieDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: movies    \r\n    };\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    const movieID = this.props.match.params.name;\r\n    console.log(this.props);\r\n    \r\n    const moviedetails = this.state.movies.find(item => item.id == movieID);\r\n\r\n   return (\r\n      <div className=\"bg-dark\">\r\n           <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\r\n              <Link className=\"navbar-brand\" to=\"/movies\">\r\n                   <img\r\n                    // className=\"imglogo\"\r\n                    className=\"img-thumbnail\"\r\n                    src={homelogo}\r\n                    alt=\"homelogo\"\r\n                    width=\"35\"\r\n                    height=\"10\"\r\n                  ></img>\r\n              </Link>\r\n\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              className=\"imdb-menu\"\r\n              variant=\"Secondary\"\r\n              id=\"dropdown-basic\"\r\n            >\r\n              Imdbmenu\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu className=\"imdb-shows\">\r\n              <Dropdown.Item\r\n                className=\"imdb-links\"\r\n                href=\"https://www.imdb.com/chart/boxoffice/?ref_=nv_ch_cht\"\r\n              >\r\n                Top Box Office\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"imdb-links\"\r\n                href=\"https://www.imdb.com/movies-in-theaters/?ref_=nv_mv_inth\"\r\n              >\r\n                In Theatres\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"imdb-links\"\r\n                href=\"https://www.imdb.com/chart/toptv/?ref_=nv_tvv_250\"\r\n              >\r\n                T.v Shows\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </nav>\r\n        <div className=\"jumbotron\">\r\n          <h1 className=\"col mt-3 text-white\">{moviedetails.Movie}</h1>\r\n\r\n          <div className=\"hell\">\r\n            <FontAwesomeIcon icon={faStar} className=\"star\" />\r\n            <p className=\"imdb\">IMDB rating</p>\r\n            <p className=\"rate\">{moviedetails.Rating}</p>\r\n          </div>\r\n\r\n          <div className=\"col mt-4 rounded random\">\r\n            <div className=\"alignment\">\r\n              <a\r\n                className=\"text-white\"\r\n                href={moviedetails.link1}\r\n              >\r\n                Watch it\r\n              </a>\r\n              {/* {moviedetails.scenes.map(scene => {\r\n           return (<a href={scene.link}>{scene.label}</a>);\r\n         })} */}\r\n\r\n              <div>\r\n              <Link to=\"/Ticketbooking\">\r\n                Ticketbooking\r\n              </Link>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col mt-4 move-left\">\r\n            <img\r\n              src={moviedetails.img}\r\n              alt=\"Aditya\"\r\n              width=\"100%\"\r\n              height=\"280\"\r\n            />\r\n          </div>\r\n          <div className=\"ml-3 mt-4 \">\r\n            <a\r\n              href={moviedetails.movietrailer}\r\n              className=\"btn btn-outline-primary\"\r\n            >\r\n              Trailer\r\n            </a>\r\n          </div>\r\n\r\n          <div className=\"col mt-3\">\r\n            <div className=\"col mt-1 text-center Description\">\r\n              Movie Description\r\n            </div>\r\n            <div className=\"col mt-1 text-white description\">\r\n              {moviedetails.Description}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\" col mt-5 move-right\">\r\n            <div className=\"text-center castandcrew\">Cast & crew </div>\r\n            <div className=\"moviedetails\">\r\n              <p className=\"text-white\">\r\n                Movie{\" \"}\r\n\r\n                <span className=\"changecolor\">{moviedetails.Movie}</span> \r\n\r\n                {/* {/* <a\r\n                  className=\"ml-3\"\r\n                  href= {moviedetails.Movie}\r\n                > *\r\n                 \r\n                </a> */}\r\n              </p>\r\n              <hr className=\"my-1\" />\r\n              <p className=\"text-white\">\r\n                Cast{\" \"}\r\n                {moviedetails.Cast.map((cast,index) => {\r\n                return (\r\n                  <span key={index}>\r\n                  \r\n                      <a className=\"ml-3 moviedetails\" href={cast.link}>{cast.name}{cast.comma}\r\n                      </a>\r\n             \r\n                      </span>\r\n                     )})}\r\n              </p>\r\n            \r\n              <hr className=\"my-1\" />\r\n              <p className=\"text-white\">\r\n                Director{\" \"}\r\n\r\n                     <span>\r\n                       <a className=\"ml-3 direc\" href={moviedetails.director.link}>\r\n                        {moviedetails.director.name}\r\n                      </a>\r\n                      \r\n                     </span>\r\n              </p>\r\n\r\n               <hr className=\"my-1\" />\r\n              <p className=\"text-white\">\r\n                {\" \"}\r\n                Cinematography\r\n                \r\n                {moviedetails.Cinematography.map((dop, index) => {\r\n                return (\r\n                  <span key={index}>\r\n                    <span>\r\n                      <a className=\"ml-3 moviedetails\" href={dop.link}>\r\n                        {dop.name}\r\n                      </a>\r\n                   </span>\r\n                   </span>\r\n                )})}\r\n              \r\n               </p>\r\n              <hr className=\"my-1\" />\r\n\r\n              <p className=\"text-white\">\r\n                Genre{\" \"}\r\n\r\n                <span>\r\n                  <a className=\"ml-3\"  href={moviedetails.genre.link}>\r\n                  {moviedetails.genre.name}\r\n                 </a>\r\n                </span>\r\n                \r\n              </p>\r\n                       \r\n              <hr className=\"my-1\" />\r\n              <p className=\"text-white\">\r\n                Music{\" \"}\r\n                {moviedetails.Music.map((music, index) => {\r\n                return (\r\n                  <span key={index}>\r\n                  \r\n                      <a className=\"ml-3 moviedetails\" href={music.link}>\r\n                        {music.name}\r\n                      </a>\r\n             \r\n                      </span>\r\n                     )})}\r\n              </p>\r\n              <hr className=\"my-1\" />\r\n\r\n              <p className=\"text-white\">\r\n                Production by{\" \"}\r\n                <a\r\n                  className=\"ml-3\"\r\n                  href={moviedetails.Production.link}>{moviedetails.Production.name}\r\n                 </a>\r\n               </p>\r\n\r\n              <hr className=\"my-1\" />\r\n              <p className=\"text-white\">\r\n                ReleaseDate{\" \"}\r\n                <a className=\"ml-3 nolink\">{moviedetails.ReleaseDate}</a>\r\n              </p>\r\n              <hr className=\"my-1\" />\r\n              <p className=\"text-white\">\r\n                Duration <a className=\"ml-3 nolink\">{moviedetails.Duration}</a>\r\n              </p>\r\n              <hr className=\"my-1\" />\r\n              <p className=\"text-white\">\r\n                Awards <a className=\"ml-3 nolink\">{moviedetails.Awards}</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white complete\">\r\n            <p className=\"text-center moviescenes\">Movie scenes</p>\r\n            <div className=\"movie-right\">\r\n\r\n               {moviedetails.scenes.map((scene, index) => {\r\n                return (\r\n                  <span key={index}>\r\n                    <span>\r\n                      <a className=\"scenes\" href={scene.link}>\r\n                        {scene.label}\r\n                      </a>\r\n                      <img\r\n                        src={scene.img}\r\n                        className=\"img-thumbnail\"\r\n                        width=\"20%\"\r\n                        height=\"18\"\r\n                      />\r\n                    </span>\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SocialFollow />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MovieDetails;\r\n","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\mockData\\moviesData.js",[],"C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\Socialfollow.js",[],"C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\Ticketbooking.js",["53","54"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal,Button} from 'react-bootstrap';\r\nimport Movieseats from './Movieseats';\r\nimport { Link } from 'react-router-dom';\r\n// import kgf2 from \"../img/kgf2.jpg\";\r\n// import radhe from \"../img/radhe.jpg\";\r\n// import sooryavanshi from \"../img/sooryavanshi.jpg\";\r\n// import tuckjagadish from \"../img/tuckjagadish.jpg\";\r\n\r\nclass Ticketbooking extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      alertMsg:\"\",\r\n      showAlert: false,\r\n      selectday:false,\r\n    }\r\n\r\n  }\r\n\r\n  onShowTimingClick = () => {\r\n    this.setState({\r\n      showAlert:true\r\n\r\n    })\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.setState({\r\n      showAlert:false\r\n    })\r\n  }\r\n\r\n  eachdayshow = () => {\r\n   \r\n\r\n    this.setState({\r\n      selectday : true\r\n         \r\n    })\r\n  } \r\n \r\n  \r\n    render() {\r\n      const showTimes = [\"10:30AM\", \"1:30PM\", \"04:45PM\", \"07:25PM\"];\r\n      const showdays = [\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\",\"SUN\"];\r\n      const { showAlert, alertMsg,selectday } = this.state;\r\n\r\n        return (\r\n          \r\n            <div>\r\n                  \r\n            <div>\r\n              <nav className=\"navbar-light bg-dark\">\r\n                \r\n                {showdays.map(days => {\r\n                  return (\r\n                   \r\n\r\n                       <button type=\"button\" className=\"day\" onClick={this.eachdayshow}>{days}</button>\r\n                   \r\n                )})}\r\n              </nav>\r\n              \r\n              \r\n              </div>\r\n                    \r\n            {selectday ? <div>\r\n               <div>\r\n                  usha prasad multiplex : Nizamabad\r\n                  {\r\n                    showTimes.map(timing=> {\r\n                      return <button type=\"button\"  onClick={this.onShowTimingClick} className=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title= \"Rs.130.00, GOLD ,available\" >{timing}</button>\r\n                      })}\r\n\r\n                </div>\r\n\r\n                <div>\r\n                  AMB Cinemas: Gachibowli\r\n                  {\r\n                    showTimes.map(timing=> {\r\n                      return <button type=\"button\"  onClick={this.onShowTimingClick} className=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Rs.130.00, GOLD ,available\">{timing}</button>\r\n                    })\r\n                  }\r\n                </div>\r\n\r\n                <div>\r\n                  PVR: Central Mall, Panjagutta\r\n                  {\r\n                    showTimes.map(timing => {\r\n                      return <button type=\"button\" onClick={this.onShowTimingClick} className=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Rs.130.00, GOLD ,available\">{timing}</button>\r\n                    })\r\n                  }\r\n                </div>\r\n                        \r\n                      \r\n \r\n\r\n                <div>\r\n                  INOX: GVK One, Banjara Hills\r\n                  {\r\n                    showTimes.map(timing => {\r\n                      return <button type=\"button\" onClick={this.onShowTimingClick} className=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Rs.130.00, GOLD ,available\">{timing}</button>\r\n                    })\r\n                  }\r\n                 \r\n                </div>\r\n\r\n                <div>\r\n                  Cinepolis: Sudha Cinemas, Hyderabad\r\n                 {\r\n                   showTimes.map(timing => {\r\n                     return <button type=\"button\" onClick={this.onShowTimingClick} className=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Rs.130.00,  GOLD, available\">{timing}</button>\r\n                   })\r\n                 }\r\n                \r\n                </div>\r\n               \r\n                <Modal show={showAlert}>\r\n                    <Modal.Header>Terms and Condition\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <div>1. Right of admission reserved.</div>\r\n                    <div>2. Ticket is Compulsory for Children of 3 Years age & Above.</div>\r\n                    <div>3. Please Carry ID Proof for movies Certified with `A` Certificate.</div>\r\n                    <div>4. Once Ticket Purchased cannot be Cancelled or refunded.</div>\r\n                    <div>5. Outside food and beverages are not allowed into the theatre premises.</div>\r\n                    <div>6. Items like Laptops, Cameras, Lighters, Matchboxes, Cigarettes or any Inflammable objects are not allowed into the theatre premises.</div>\r\n                    <div>7. Helmets, carry bags, eatables or handbags are not allowed into the theatres, please deposit at Baggage counter provided.</div>\r\n                    <div>8. Only Online booking partner server messages are allowed.</div>\r\n                    <div>9. Children under the age of 18 years will not be permitted in the cinema for A rated movies.</div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                         <Button onClick={this.onCancel} variant=\"secondary\">Cancel</Button>\r\n                         <Link to=\"/movieseats\">\r\n                          <Button variant=\"primary\">Accept</Button>\r\n                        </Link>\r\n                         \r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n            \r\n            </div> \r\n               : <div className=\"quote\">Select A Day</div>}\r\n            </div>  \r\n        );\r\n    }\r\n                             \r\n                               \r\n}\r\n\r\nexport default Ticketbooking;","C:\\Users\\chandu\\Desktop\\Project1\\hello-movies\\src\\components\\Movieseats.js",["55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":25},{"ruleId":"62","severity":1,"message":"67","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":17},{"ruleId":"62","severity":1,"message":"68","line":3,"column":18,"nodeType":"64","messageId":"65","endLine":3,"endColumn":28},{"ruleId":"69","severity":1,"message":"70","line":28,"column":65,"nodeType":"71","messageId":"72","endLine":28,"endColumn":67},{"ruleId":"73","severity":1,"message":"74","line":228,"column":17,"nodeType":"75","endLine":228,"endColumn":44},{"ruleId":"73","severity":1,"message":"74","line":232,"column":26,"nodeType":"75","endLine":232,"endColumn":53},{"ruleId":"73","severity":1,"message":"74","line":236,"column":24,"nodeType":"75","endLine":236,"endColumn":51},{"ruleId":"76","severity":1,"message":"77","line":252,"column":23,"nodeType":"75","endLine":257,"endColumn":25},{"ruleId":"62","severity":1,"message":"78","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":18},{"ruleId":"62","severity":1,"message":"79","line":49,"column":26,"nodeType":"64","messageId":"65","endLine":49,"endColumn":34},{"ruleId":"62","severity":1,"message":"80","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":23},{"ruleId":"62","severity":1,"message":"81","line":5,"column":25,"nodeType":"64","messageId":"65","endLine":5,"endColumn":30},{"ruleId":"62","severity":1,"message":"82","line":24,"column":35,"nodeType":"64","messageId":"65","endLine":24,"endColumn":45},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faRoute' is defined but never used.","'StarRating' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Movieseats' is defined but never used.","'alertMsg' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'modalclose' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]